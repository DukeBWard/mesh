name: Pulumi GitOps CI/CD

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'pulumi/**'
      - '.github/workflows/pulumi-gitops.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'pulumi/**'
      - '.github/workflows/pulumi-gitops.yml'
  workflow_dispatch:

env:
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  DOCKER_REPO: ${{ secrets.DOCKER_REPOSITORY }}

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REPO }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Determine Environment
        id: environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo "TAG=prod" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "ENV=staging" >> $GITHUB_ENV
            echo "TAG=staging" >> $GITHUB_ENV
          else
            echo "ENV=dev" >> $GITHUB_ENV
            echo "TAG=dev" >> $GITHUB_ENV
          fi
      
      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/mesh
          push: true
          tags: ${{ env.DOCKER_REPO }}/mesh-frontend:${{ env.TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_REPO }}/mesh-frontend:${{ env.TAG }}
          cache-to: type=inline

  build-and-push-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REPO }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Determine Environment
        id: environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo "TAG=prod" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "ENV=staging" >> $GITHUB_ENV
            echo "TAG=staging" >> $GITHUB_ENV
          else
            echo "ENV=dev" >> $GITHUB_ENV
            echo "TAG=dev" >> $GITHUB_ENV
          fi
      
      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ env.DOCKER_REPO }}/mesh-backend:${{ env.TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_REPO }}/mesh-backend:${{ env.TAG }}
          cache-to: type=inline

  pulumi-deploy:
    needs: [build-and-push-frontend, build-and-push-backend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config
      
      - name: Determine Environment
        id: environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "PULUMI_STACK=prod" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "PULUMI_STACK=staging" >> $GITHUB_ENV
          else
            echo "PULUMI_STACK=dev" >> $GITHUB_ENV
          fi
      
      - name: Setup Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      
      - name: Install dependencies
        run: |
          cd pulumi/kubernetes
          npm install
      
      - name: Select Pulumi stack
        run: |
          cd pulumi/kubernetes
          pulumi stack select ${{ env.PULUMI_STACK }}
      
      - name: Preview infrastructure changes
        if: github.event_name == 'pull_request'
        run: |
          cd pulumi/kubernetes
          pulumi preview
      
      - name: Update infrastructure
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        run: |
          cd pulumi/kubernetes
          pulumi up --yes 